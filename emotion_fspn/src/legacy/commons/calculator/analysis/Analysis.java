/* This file was generated by SableCC (http://www.sablecc.org/). */

package legacy.commons.calculator.analysis;

import legacy.commons.calculator.node.ACplxTerm;
import legacy.commons.calculator.node.AExpression;
import legacy.commons.calculator.node.ALterm;
import legacy.commons.calculator.node.AMain;
import legacy.commons.calculator.node.AMinusOp;
import legacy.commons.calculator.node.APlusOp;
import legacy.commons.calculator.node.AReal;
import legacy.commons.calculator.node.ARealPart;
import legacy.commons.calculator.node.ARterm;
import legacy.commons.calculator.node.ASlashOp;
import legacy.commons.calculator.node.ASmplTerm;
import legacy.commons.calculator.node.AStarOp;
import legacy.commons.calculator.node.EOF;
import legacy.commons.calculator.node.Node;
import legacy.commons.calculator.node.Start;
import legacy.commons.calculator.node.Switch;
import legacy.commons.calculator.node.TBlank;
import legacy.commons.calculator.node.TDot;
import legacy.commons.calculator.node.TMinus;
import legacy.commons.calculator.node.TNum;
import legacy.commons.calculator.node.TPlus;
import legacy.commons.calculator.node.TRcb;
import legacy.commons.calculator.node.TRob;
import legacy.commons.calculator.node.TSlash;
import legacy.commons.calculator.node.TStar;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseAMain(AMain node);
    void caseAExpression(AExpression node);
    void caseALterm(ALterm node);
    void caseARterm(ARterm node);
    void caseACplxTerm(ACplxTerm node);
    void caseASmplTerm(ASmplTerm node);
    void caseAPlusOp(APlusOp node);
    void caseAMinusOp(AMinusOp node);
    void caseAStarOp(AStarOp node);
    void caseASlashOp(ASlashOp node);
    void caseAReal(AReal node);
    void caseARealPart(ARealPart node);

    void caseTBlank(TBlank node);
    void caseTRob(TRob node);
    void caseTRcb(TRcb node);
    void caseTPlus(TPlus node);
    void caseTMinus(TMinus node);
    void caseTStar(TStar node);
    void caseTSlash(TSlash node);
    void caseTNum(TNum node);
    void caseTDot(TDot node);
    void caseEOF(EOF node);
}
